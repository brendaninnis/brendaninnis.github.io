<!doctype html>
<html lang="{{ metadata.language }}">
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>{{ title or metadata.title }}</title>
		<meta name="description" content="{{ description or metadata.description }}">

		{#- Atom and JSON feeds included by default #}
		<link rel="alternate" href="/feed/feed.xml" type="application/atom+xml" title="{{ metadata.title }}">
		<link rel="alternate" href="/feed/feed.json" type="application/json" title="{{ metadata.title }}">

		{#- Uncomment this if youâ€™d like folks to know that you used Eleventy to build your site!  #}
		{#- <meta name="generator" content="{{ eleventy.generator }}"> #}

		{#-
		CSS bundles are provided via the `eleventy-plugin-bundle` plugin:
		1. You can add to them using `{% css %}`
		2. You can get from them using `{% getBundle "css" %}` or `{% getBundleFileUrl "css" %}`
		3. You can do the same for JS: {% js %}{% endjs %} and <script>{% getBundle "js" %}</script>
		4. Learn more: https://github.com/11ty/eleventy-plugin-bundle
		#}

		{#- Add an arbitrary string to the bundle #}
		{%- css %}* { box-sizing: border-box; }{% endcss %}
		{#- Add the contents of a file to the bundle #}
		{%- css %}{% include "public/css/index.css" %}{% endcss %}
		{#- Or add from node_modules #}
		{# {%- css %}{% include "node_modules/prismjs/themes/prism-okaidia.css" %}{% endcss %} #}

		{#- Render the CSS bundle using Inlined CSS (for the fastest site performance in production) #}
		<style>{% getBundle "css" %}</style>
		{#- Renders the CSS bundle using a separate file, if you can't set CSP directive style-src: 'unsafe-inline' #}
		{#- <link rel="stylesheet" href="{% getBundleFileUrl "css" %}"> #}
		<!-- Google tag (gtag.js) -->
		<script async src="https://www.googletagmanager.com/gtag/js?id=G-998XX4MGQY"></script>
		<script>
			window.dataLayer = window.dataLayer || [];
			function gtag(){dataLayer.push(arguments);}
			gtag('js', new Date());

			gtag('config', 'G-998XX4MGQY');
		</script>

	</head>
	<body>
		<a href="#skip" class="visually-hidden">Skip to main content</a>

		<header>
			<a href="/" class="home-link">{{ metadata.title }}</a>

			{#- Read more about `eleventy-navigation` at https://www.11ty.dev/docs/plugins/navigation/ #}
			<nav>
				<h2 class="visually-hidden">Top level navigation menu</h2>
				<ul class="nav">
					{%- for entry in collections.all | eleventyNavigation %}
					<li class="nav-item"><a href="{{ entry.url }}"{% if entry.url == page.url %} aria-current="page"{% endif %}>{{ entry.title }}</a></li>
					{%- endfor %}
				</ul>
			</nav>
			<span class="spacer"></span>
			<button id="theme" aria-label="Toggle theme" class="theme-toggle"></button>
		</header>

		<main id="skip">
			{{ content | safe }}
		</main>

		<footer></footer>

		<!-- This page `{{ page.url | htmlBaseUrl }}` was built on {% currentBuildDate %} -->

		<!-- Theme toggle -->
		<script defer>
			// Theme toggle icons
			const sun = "<svg enable-background=\"new 0 0 512 512\" height=\"512px\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 512 512\" width=\"512px\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g><g><path d=\"M256,144c-61.75,0-112,50.25-112,112s50.25,112,112,112s112-50.25,112-112S317.75,144,256,144z M256,336    c-44.188,0-80-35.812-80-80c0-44.188,35.812-80,80-80c44.188,0,80,35.812,80,80C336,300.188,300.188,336,256,336z M256,112    c8.833,0,16-7.167,16-16V64c0-8.833-7.167-16-16-16s-16,7.167-16,16v32C240,104.833,247.167,112,256,112z M256,400    c-8.833,0-16,7.167-16,16v32c0,8.833,7.167,16,16,16s16-7.167,16-16v-32C272,407.167,264.833,400,256,400z M380.438,154.167    l22.625-22.625c6.25-6.25,6.25-16.375,0-22.625s-16.375-6.25-22.625,0l-22.625,22.625c-6.25,6.25-6.25,16.375,0,22.625    S374.188,160.417,380.438,154.167z M131.562,357.834l-22.625,22.625c-6.25,6.249-6.25,16.374,0,22.624s16.375,6.25,22.625,0    l22.625-22.624c6.25-6.271,6.25-16.376,0-22.625C147.938,351.583,137.812,351.562,131.562,357.834z M112,256    c0-8.833-7.167-16-16-16H64c-8.833,0-16,7.167-16,16s7.167,16,16,16h32C104.833,272,112,264.833,112,256z M448,240h-32    c-8.833,0-16,7.167-16,16s7.167,16,16,16h32c8.833,0,16-7.167,16-16S456.833,240,448,240z M131.541,154.167    c6.251,6.25,16.376,6.25,22.625,0c6.251-6.25,6.251-16.375,0-22.625l-22.625-22.625c-6.25-6.25-16.374-6.25-22.625,0    c-6.25,6.25-6.25,16.375,0,22.625L131.541,154.167z M380.459,357.812c-6.271-6.25-16.376-6.25-22.625,0    c-6.251,6.25-6.271,16.375,0,22.625l22.625,22.625c6.249,6.25,16.374,6.25,22.624,0s6.25-16.375,0-22.625L380.459,357.812z\" fill=\"var(--text-color)\"/></g></g></svg>";
			const moon = "<svg enable-background=\"new 0 0 512 512\" height=\"512px\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 512 512\" width=\"512px\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><path d=\"M349.852,343.15c-49.875,49.916-131.083,49.916-181,0c-49.916-49.918-49.916-131.125,0-181.021  c13.209-13.187,29.312-23.25,47.832-29.812c5.834-2.042,12.293-0.562,16.625,3.792c4.376,4.375,5.855,10.833,3.793,16.625  c-12.542,35.375-4,73.666,22.25,99.917c26.209,26.228,64.5,34.75,99.916,22.25c5.792-2.062,12.271-0.582,16.625,3.793  c4.376,4.332,5.834,10.812,3.771,16.625C373.143,313.838,363.06,329.941,349.852,343.15z M191.477,184.754  c-37.438,37.438-37.438,98.354,0,135.771c40,40.021,108.125,36.416,143-8.168c-35.959,2.25-71.375-10.729-97.75-37.084  c-26.375-26.354-39.333-61.771-37.084-97.729C196.769,179.796,194.039,182.192,191.477,184.754z\" fill=\"var(--text-color)\"/></svg>";

			// Check for default theme
			if (!("theme" in localStorage)) {
				localStorage.theme = window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
			}

			// Apply theme
			function applyTheme() {
				document.documentElement.setAttribute("data-theme", localStorage.theme);

				let syntaxThemeCSS = document.getElementById("syntax-theme-css");

				if (localStorage.theme === "dark") {
					document.getElementById("theme").innerHTML = moon;
					if (syntaxThemeCSS !== null) {
						syntaxThemeCSS.href = "/css/prism-one-dark.css";
					}
				} else {
					document.getElementById("theme").innerHTML = sun;
					if (syntaxThemeCSS !== null) {
						syntaxThemeCSS.href = "/css/prism-one-light.css";
					}
				}
			}
			applyTheme();

			// Toggle theme
			document.getElementById("theme").addEventListener("click", function () {
				if (localStorage.theme === "dark") {
					localStorage.theme = "light";
				} else {
					localStorage.theme = "dark";
				}
				applyTheme();
			});
		</script>

        <!-- Scroll to anchor -->
        <script defer>
            
        </script>

        <!-- Sticky Headers -->
        <script defer>
            const headers = document.querySelectorAll('h2:not(.visually-hidden)');
            let stickyHeaders = [];

            const observer = new IntersectionObserver(entries => {
                entries.forEach(entry => {
                    const header = entry.target;
                    if (entry.isIntersecting) {
                        stickyHeaders.forEach(header => {
                            header.classList.add('passed');
                        });
                        stickyHeaders.push(header);
                        let offset = header.nextElementSibling.offsetTop - header.offsetHeight - 16; // 16px is the margin
                        header.querySelector('a').addEventListener('click', function (e) {
                            window.scrollTo({
                                top: offset,
                                behavior: 'smooth'
                            });
                        });
                        header.classList.add('sticky');
                    } else {
                        header.classList.remove('sticky');
                        stickyHeaders.pop();
                        header.querySelector('a').removeEventListener('click', function () {});
                        if (stickyHeaders.length > 0) {
                            stickyHeaders[stickyHeaders.length - 1].classList.remove('passed');
                        }
                    }
                });
            }, {
                rootMargin: '0px 0px -100% 0px',
                threshold: 0
            });

            headers.forEach(header => {
                observer.observe(header);
            });

        </script>
	</body>
</html>
